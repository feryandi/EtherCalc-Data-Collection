// Generated by LiveScript 1.5.0
(function(){
  this.__MYSQL__ = null;
  this.include = function(){
    var db, env, ref$, mysqlPort, mysqlHost, mysqlPass, mysqlDb, dataDir, mysql, client;
    if (this.__MYSQL__) {
      return this.__MYSQL__;
    }
    db = {};
    env = process.env;
    ref$ = [env['MYSQL_PORT'], env['MYSQL_HOST'], env['MYSQL_PASS'], env['MYSQL_DB'], env['OPENSHIFT_DATA_DIR']], mysqlPort = ref$[0], mysqlHost = ref$[1], mysqlPass = ref$[2], mysqlDb = ref$[3], dataDir = ref$[4];
    mysql = require('mysql');
    client = client;
    dataDir == null && (dataDir = process.cwd());
    db.createConnection = function(host, port, user, pass, db){
      var mysqlHost, mysqlPort, mysqlUser, mysqlPass, mysqlDB, mysqlSetting, client;
      mysqlHost == null && (mysqlHost = host);
      mysqlPort == null && (mysqlPort = port);
      mysqlUser == null && (mysqlUser = user);
      mysqlPass == null && (mysqlPass = pass);
      mysqlDB == null && (mysqlDB = db);
      mysqlSetting = {
        host: mysqlHost,
        user: mysqlUser,
        password: mysqlPass,
        database: mysqlDB
      };
      client = mysql.createConnection(mysqlSetting);
      return client.connect(function(err){
        if (err) {
          console.log("MySQL error connecting: " + err + ".stack");
          return false;
        }
        console.log("MySQL connected as id " + client + ".threadId");
        return true;
      });
    };
    db.executeSQL = function(sql, mysqlSetting, cb){
      var client;
      client = mysql.createConnection(mysqlSetting);
      return client.connect(function(err){
        if (err) {
          console.log("MySQL error connecting: " + err + ".stack");
          return false;
        }
        console.log("MySQL connected as id " + client + ".threadId");
        console.log("SQL: " + sql);
        client.query(sql, function(error, results, fields){
          return cb(error, results);
        });
        return true;
      });
    };
    db.createTable = function(table_name, columns, mysqlSetting){
      var colstring, i, i$, len$, col, sql;
      colstring = '(';
      i = 0;
      for (i$ = 0, len$ = columns.length; i$ < len$; ++i$) {
        col = columns[i$];
        if (i > 0) {
          colstring += ', ';
        }
        if (col.type === "VARCHAR") {
          colstring += '`' + col.name.trim() + '` ' + col.type + '(160)';
        } else if (col.type === "INT") {
          colstring += '`' + col.name.trim() + '` ' + col.type + '(11)';
        } else {
          colstring += '`' + col.name.trim() + '` ' + col.type;
        }
        i += 1;
      }
      colstring += ')';
      sql = "CREATE TABLE " + table_name + " " + colstring;
      return db.executeSQL(sql, mysqlSetting, function(error, results){});
    };
    db.isExistTable = function(table_name, mysqlSetting, cb){
      var sql;
      sql = "SHOW TABLES LIKE '" + table_name + "'";
      return db.executeSQL(sql, mysqlSetting, function(error, results){
        return cb(error, results);
      });
    };
    db.selectData = function(table_name, col, val, mysqlSetting, cb){
      var sql;
      sql = "SELECT * FROM " + table_name + " WHERE " + col + " = '" + val + "'";
      return db.executeSQL(sql, mysqlSetting, function(error, results){
        return cb(error, results);
      });
    };
    db.dropTable = function(table_name, mysqlSetting){
      var sql;
      sql = "DROP TABLE " + table_name;
      return db.executeSQL(sql, mysqlSetting, function(error, results){});
    };
    db.insertData = function(table_name, columns, data, mysqlSetting){
      var colstring, i, i$, len$, col, datastring, jd, d, j$, len1$, dt, sql;
      colstring = '(';
      i = 0;
      for (i$ = 0, len$ = columns.length; i$ < len$; ++i$) {
        col = columns[i$];
        if (i > 0) {
          colstring += ', ';
        }
        colstring += '`' + col.name.trim() + '`';
        i += 1;
      }
      colstring += ')';
      datastring = '(';
      jd = 1;
      for (i$ = 0, len$ = data.length; i$ < len$; ++i$) {
        d = data[i$];
        i = 0;
        for (j$ = 0, len1$ = d.length; j$ < len1$; ++j$) {
          dt = d[j$];
          console.log(dt);
          if (i > 0) {
            datastring += ', ';
          }
          datastring += '"' + db.escapeString(dt) + '"';
          i += 1;
        }
        datastring += ')';
        if (jd < data.length) {
          datastring += ', (';
        }
        jd += 1;
      }
      sql = "INSERT INTO " + table_name + " " + colstring + " VALUES " + datastring;
      return db.executeSQL(sql, mysqlSetting, function(error, results){});
    };
    db.updateData = function(table_name, columns, data, con_col, con_val, mysqlSetting){
      var colstring, i, i$, len$, col, sql;
      colstring = '';
      i = 0;
      for (i$ = 0, len$ = columns.length; i$ < len$; ++i$) {
        col = columns[i$];
        if (i > 0) {
          colstring += ", ";
        }
        colstring += "`" + col.name.trim() + "`='" + data[i] + "'";
        i += 1;
      }
      sql = "UPDATE " + table_name + " SET " + colstring + " WHERE " + con_col + " = '" + con_val + "'";
      return db.executeSQL(sql, mysqlSetting, function(error, results){});
    };
    db.escapeString = function(str){
      return ("" + str).replace(/[\0\x08\x09\x1a\n\r"'\\\%]/g, function(char){
        switch (char) {
        case "\0":
          return "\\0";
        case "\x08":
          return "\\b";
        case "\x09":
          return "\\t";
        case "\x1a":
          return "\\z";
        case "\n":
          return "\\n";
        case "\r":
          return "\\r";
        case "\"":
        case "'":
        case "\\":
        case "%":
          return "\\" + char;
        }
      });
    };
    db.log = function(){
      console.log("MySQL OK");
      return "Some shitty strings";
    };
    db.test = function(mysqlSetting){
      var sql;
      sql = "CREATE TABLE pet (name VARCHAR(20), sex CHAR(1), birth DATE, death DATE)";
      return db.executeSQL(sql, mysqlSetting);
    };
    return this.__MYSQL__ = db;
  };
}).call(this);
